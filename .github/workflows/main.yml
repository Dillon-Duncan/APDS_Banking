name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write  # Allows the workflow to push changes back to GitHub

jobs:
  # --------------------------------------
  # JOB 1: Install dependencies, Lint & Auto-Fix
  # --------------------------------------
  build-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies (server)
        run: |
          cd server
          npm install &> ../../server-install.log

      - name: Install dependencies (client)
        run: |
          cd client
          npm install &> ../../client-install.log

      # Run ESLint and auto-fix issues
      - name: Run ESLint with Auto-Fix
        run: npx eslint . --fix &> eslint.log || true

      # Commit and Push ESLint Fixes
      - name: Commit and Push ESLint Fixes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Auto-fixed ESLint issues" || echo "No changes to commit"
          git push origin HEAD:master || echo "No changes to push"

      # Upload ESLint log
      - name: Upload ESLint Results
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: eslint.log

      # Run Prettier auto-fix
      - name: Auto-Fix Formatting (Prettier)
        run: npx prettier --write . &> prettier-fix.log || true

      # Commit and Push Prettier Fixes
      - name: Commit and Push Prettier Fixes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Auto-fixed code formatting" || echo "No changes to commit"
          git push origin HEAD:master || echo "No changes to push"

      # Upload Prettier log
      - name: Upload Prettier Logs
        uses: actions/upload-artifact@v4
        with:
          name: prettier-results
          path: prettier-fix.log

  # --------------------------------------
  # JOB 2: Security Scan & Auto-Fix
  # --------------------------------------
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Auto-fix security vulnerabilities
      - name: Auto-Fix Server Security Issues
        run: |
          cd server
          npm audit fix --force &> ../../server-audit-fix.log || true

      - name: Auto-Fix Client Security Issues
        run: |
          cd client
          npm audit fix --force &> ../../client-audit-fix.log || true

      # Commit and Push Security Fixes
      - name: Commit and Push Security Fixes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Auto-fixed security vulnerabilities" || echo "No changes to commit"
          git push origin HEAD:master || echo "No changes to push"

      # Upload Security Logs
      - name: Upload Security Audit Logs
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: |
            server-audit-fix.log
            client-audit-fix.log

  # --------------------------------------
  # JOB 3: CodeQL Security Analysis 
  # --------------------------------------
  codeql-analysis:
    runs-on: ubuntu-latest
    needs: security-scan
    permissions:
      security-events: write
      contents: read
      actions: read
      packages: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initialize CodeQL analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      # Run CodeQL analysis and save log
      - name: Perform CodeQL Analysis
        run: |
          echo "Starting CodeQL Analysis..." > codeql.log
          github/codeql-action/analyze@v3 &>> codeql.log

      # Upload CodeQL Analysis Logs
      - name: Upload CodeQL Logs
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results
          path: codeql.log
