name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # --------------------------------------
  # JOB 1: Install dependencies & Lint
  # --------------------------------------
  build-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install dependencies for both server & client
      - name: Install dependencies (server)
        run: |
          cd server
          npm install &> ../../server-install.log

      - name: Install dependencies (client)
        run: |
          cd client
          npm install &> ../../client-install.log

      # Fix ESLint permissions issue
      - name: Fix ESLint Permissions
        run: chmod +x node_modules/.bin/eslint || true

      # Run ESLint and save output to a log file
      - name: Run ESLint
        run: npx eslint . &> eslint.log || true

      # Upload ESLint results
      - name: Upload Lint Logs
        uses: actions/upload-artifact@v3
        with:
          name: eslint-results
          path: eslint.log

  # --------------------------------------
  # JOB 2: Security Scan (npm audit)
  # --------------------------------------
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Run npm audit on both client & server, saving results
      - name: Audit server dependencies
        run: |
          cd server
          npm audit --production &> ../../server-audit.log || true

      - name: Audit client dependencies
        run: |
          cd client
          npm audit --production &> ../../client-audit.log || true

      # Upload Security Audit Logs
      - name: Upload Security Logs
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-results
          path: |
            server-audit.log
            client-audit.log

  # --------------------------------------
  # JOB 3: CodeQL Security Analysis
  # --------------------------------------
  codeql-analysis:
    runs-on: ubuntu-latest
    needs: security-scan
    permissions:
      security-events: write
      contents: read
      actions: read
      packages: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initialize CodeQL analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      # Run CodeQL analysis and save log
      - name: Perform CodeQL Analysis
        run: |
          echo "Starting CodeQL Analysis..." > codeql.log
          github/codeql-action/analyze@v3 &>> codeql.log

      # Upload CodeQL Analysis Logs
      - name: Upload CodeQL Logs
        uses: actions/upload-artifact@v3
        with:
          name: codeql-results
          path: codeql.log
