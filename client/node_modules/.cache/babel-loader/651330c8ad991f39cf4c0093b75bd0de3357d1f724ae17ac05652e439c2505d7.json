{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Desktop\\\\APDS_Banking\\\\client\\\\src\\\\components\\\\login\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    account_number: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    console.log(`Input changed: ${e.target.name}`);\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    console.log('Updated form data:', {\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form submission started');\n    console.log('Form data being sent:', {\n      ...formData,\n      password: '****'\n    });\n    try {\n      console.log('Making API request to login endpoint');\n      const response = await fetch('http://localhost:5000/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      console.log('Response status:', response.status);\n      const data = await response.json();\n      console.log('Response data:', {\n        ...data,\n        token: '****'\n      });\n      if (response.ok) {\n        console.log('Login successful');\n        localStorage.setItem('token', data.token);\n        console.log('Token stored in localStorage');\n        localStorage.setItem('user', JSON.stringify(data.user));\n        console.log('User data stored in localStorage');\n        console.log('Navigating to dashboard');\n        navigate('/dashboard');\n      } else {\n        console.log('Login failed:', data.message);\n        setError(data.message);\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError('Failed to connect to server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"account_number\",\n          children: \"Account Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"account_number\",\n          name: \"account_number\",\n          value: formData.account_number,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ceo6wO4I/cmJzlKSfYVaJswpoaw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","formData","setFormData","username","account_number","password","error","setError","handleChange","e","console","log","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","data","json","token","ok","localStorage","setItem","user","message","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Desktop/APDS_Banking/client/src/components/login/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    account_number: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    console.log(`Input changed: ${e.target.name}`);\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n    console.log('Updated form data:', { ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Form submission started');\r\n    console.log('Form data being sent:', { ...formData, password: '****' });\r\n\r\n    try {\r\n      console.log('Making API request to login endpoint');\r\n      const response = await fetch('http://localhost:5000/user/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      console.log('Response status:', response.status);\r\n      const data = await response.json();\r\n      console.log('Response data:', { ...data, token: '****' });\r\n      \r\n      if (response.ok) {\r\n        console.log('Login successful');\r\n        localStorage.setItem('token', data.token);\r\n        console.log('Token stored in localStorage');\r\n        \r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        console.log('User data stored in localStorage');\r\n        \r\n        console.log('Navigating to dashboard');\r\n        navigate('/dashboard');\r\n      } else {\r\n        console.log('Login failed:', data.message);\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError('Failed to connect to server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-form\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h1>Login</h1>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"account_number\">Account Number</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"account_number\"\r\n            name=\"account_number\"\r\n            value={formData.account_number}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-button\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}