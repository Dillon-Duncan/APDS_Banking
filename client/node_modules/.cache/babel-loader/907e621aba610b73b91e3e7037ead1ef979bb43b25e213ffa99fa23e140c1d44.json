{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Desktop\\\\APDS_Banking\\\\client\\\\src\\\\components\\\\login\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles/theme.css';\nimport { NAME_REGEX, ACCOUNT_REGEX } from '../../utils/validations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  console.log('Login component initialized');\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    account_number: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    if (formData.username === 'Admin') {\n      setIsAdmin(true);\n      setFormData(prev => ({\n        ...prev,\n        account_number: ''\n      }));\n    } else {\n      setIsAdmin(false);\n    }\n  }, [formData.username]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(`Input changed: ${name}`);\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Submitting login form:', {\n      ...formData,\n      password: '****'\n    });\n    try {\n      const sanitizedData = {\n        username: formData.username.replace(/[^a-zA-ZÀ-ÿ\\s'-]/g, '').substring(0, 50),\n        account_number: formData.account_number.replace(/[^A-Z0-9]/gi, '').substring(0, 20),\n        password: formData.password.normalize('NFKC').substring(0, 100)\n      };\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(sanitizedData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Login failed');\n      }\n      const data = await response.json();\n      console.log('Login response:', {\n        ...data,\n        token: data.token ? 'exists' : 'none'\n      });\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('userRole', data.user.role);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setIsAuthenticated(true);\n        console.log('Login successful, navigating to dashboard');\n        navigate('/dashboard', {\n          replace: true\n        });\n      } else {\n        console.error('Login failed:', data.message);\n        setError(data.message || 'Login failed');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message || 'Failed to connect to server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"form-title\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-input\",\n                type: \"text\",\n                id: \"username\",\n                name: \"username\",\n                placeholder: \"Enter username\",\n                value: formData.username,\n                onChange: handleChange,\n                onBlur: e => {\n                  if (!NAME_REGEX.test(e.target.value)) {\n                    setError('Username must be 2-50 letters');\n                  }\n                },\n                pattern: \"[A-Za-z\\xC0-\\xFF '-]{2,50}\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                htmlFor: \"account_number\",\n                children: \"Account Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-input\",\n                type: \"text\",\n                id: \"account_number\",\n                name: \"account_number\",\n                placeholder: \"Enter account number\",\n                value: formData.account_number,\n                onChange: handleChange,\n                onBlur: e => {\n                  if (!ACCOUNT_REGEX.test(e.target.value)) {\n                    setError('Account number must be 10-20 alphanumeric');\n                  }\n                },\n                pattern: \"[A-Za-z0-9]{10,20}\",\n                required: !isAdmin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Enter password\",\n            value: formData.password,\n            onChange: handleChange,\n            minLength: \"8\",\n            onKeyPress: e => {\n              if (e.key.length > 1 || e.keyCode > 255) {\n                e.preventDefault();\n              }\n            },\n            onPaste: e => {\n              const paste = e.clipboardData.getData('text');\n              if (paste.length > 100) {\n                e.preventDefault();\n              }\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"s0UwBVQAKtwonYqugSuxuMTbDXc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","NAME_REGEX","ACCOUNT_REGEX","jsxDEV","_jsxDEV","Login","setIsAuthenticated","_s","console","log","navigate","formData","setFormData","username","account_number","password","error","setError","isAdmin","setIsAdmin","prev","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","sanitizedData","replace","substring","normalize","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","token","localStorage","setItem","user","role","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","onChange","onBlur","test","pattern","required","minLength","onKeyPress","key","length","keyCode","onPaste","paste","clipboardData","getData","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Desktop/APDS_Banking/client/src/components/login/login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../styles/theme.css';\r\nimport { NAME_REGEX, ACCOUNT_REGEX } from '../../utils/validations';\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  console.log('Login component initialized');\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    account_number: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (formData.username === 'Admin') {\r\n      setIsAdmin(true);\r\n      setFormData(prev => ({ ...prev, account_number: '' }));\r\n    } else {\r\n      setIsAdmin(false);\r\n    }\r\n  }, [formData.username]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(`Input changed: ${name}`);\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Submitting login form:', { ...formData, password: '****' });\r\n\r\n    try {\r\n        const sanitizedData = {\r\n          username: formData.username.replace(/[^a-zA-ZÀ-ÿ\\s'-]/g, '').substring(0, 50),\r\n          account_number: formData.account_number.replace(/[^A-Z0-9]/gi, '').substring(0, 20),\r\n          password: formData.password.normalize('NFKC').substring(0, 100)\r\n        };\r\n\r\n        const response = await fetch('http://localhost:5000/api/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(sanitizedData)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Login failed');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Login response:', { ...data, token: data.token ? 'exists' : 'none' });\r\n\r\n        if (data.token) {\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('userRole', data.user.role);\r\n            localStorage.setItem('user', JSON.stringify(data.user));\r\n            setIsAuthenticated(true);\r\n            console.log('Login successful, navigating to dashboard');\r\n            \r\n            navigate('/dashboard', { replace: true });\r\n        } else {\r\n            console.error('Login failed:', data.message);\r\n            setError(data.message || 'Login failed');\r\n        }\r\n    } catch (err) {\r\n        console.error('Login error:', err);\r\n        setError(err.message || 'Failed to connect to server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"form-container\">\r\n        <form className=\"login-form\" onSubmit={handleSubmit}>\r\n          <h1 className=\"form-title\">Login</h1>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          \r\n          <div className=\"form-row\">\r\n            <div className=\"form-column\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\" htmlFor=\"username\">Username</label>\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  placeholder=\"Enter username\"\r\n                  value={formData.username}\r\n                  onChange={handleChange}\r\n                  onBlur={(e) => {\r\n                    if(!NAME_REGEX.test(e.target.value)) {\r\n                      setError('Username must be 2-50 letters');\r\n                    }\r\n                  }}\r\n                  pattern=\"[A-Za-zÀ-ÿ '-]{2,50}\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            {!isAdmin && (\r\n              <div className=\"form-column\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\" htmlFor=\"account_number\">Account Number</label>\r\n                  <input\r\n                    className=\"form-input\"\r\n                    type=\"text\"\r\n                    id=\"account_number\"\r\n                    name=\"account_number\"\r\n                    placeholder=\"Enter account number\"\r\n                    value={formData.account_number}\r\n                    onChange={handleChange}\r\n                    onBlur={(e) => {\r\n                      if(!ACCOUNT_REGEX.test(e.target.value)) {\r\n                        setError('Account number must be 10-20 alphanumeric');\r\n                      }\r\n                    }}\r\n                    pattern=\"[A-Za-z0-9]{10,20}\"\r\n                    required={!isAdmin}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\" htmlFor=\"password\">Password</label>\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              minLength=\"8\"\r\n              onKeyPress={(e) => {\r\n                if(e.key.length > 1 || e.keyCode > 255) {\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n              onPaste={(e) => {\r\n                const paste = e.clipboardData.getData('text');\r\n                if(paste.length > 100) {\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"submit-button\">Login</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}