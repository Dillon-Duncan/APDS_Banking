{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Desktop\\\\APDS_Banking\\\\client\\\\src\\\\components\\\\dashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// File: src/components/dashboard/AdminDashboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = ({\n  user,\n  token\n}) => {\n  _s();\n  const [pendingTransactions, setPendingTransactions] = useState([]);\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n  const [swiftValidationResults, setSwiftValidationResults] = useState({});\n\n  // Fetch all pending transactions from the backend\n  const fetchPendingTransactions = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/transaction/admin/pending', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setPendingTransactions(data);\n    } catch (error) {\n      console.error('Error fetching pending transactions:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPendingTransactions();\n    const interval = setInterval(fetchPendingTransactions, 30000); // Refresh every 30 seconds\n    return () => clearInterval(interval);\n  }, [token]);\n\n  // Handle approval/rejection of a transaction\n  const handleVerification = async (transactionId, action) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/transaction/admin/verify/${transactionId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          action,\n          verificationNotes: (selectedTransaction === null || selectedTransaction === void 0 ? void 0 : selectedTransaction.verificationNotes) || ''\n        })\n      });\n      if (response.ok) {\n        fetchPendingTransactions();\n        setSelectedTransaction(null);\n        // Clear any validation result for this transaction\n        setSwiftValidationResults(prev => {\n          const newResults = {\n            ...prev\n          };\n          delete newResults[transactionId];\n          return newResults;\n        });\n      }\n    } catch (error) {\n      console.error('Error verifying transaction:', error);\n    }\n  };\n\n  // Handle SWIFT code validation by calling the admin endpoint\n  const handleValidateSwift = async (transactionId, swiftCode) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/transaction/admin/validate-swift', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          swiftCode\n        })\n      });\n      const result = await response.json();\n      // Save the result (which includes a validity flag and message) for this transaction\n      setSwiftValidationResults(prev => ({\n        ...prev,\n        [transactionId]: result\n      }));\n    } catch (error) {\n      console.error('Error validating SWIFT code:', error);\n      setSwiftValidationResults(prev => ({\n        ...prev,\n        [transactionId]: {\n          valid: false,\n          message: 'Validation failed'\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pending-transactions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pending Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), pendingTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customer-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Customer: \", transaction.customer.first_name, \" \", transaction.customer.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Account: \", transaction.customer.account_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Amount: \", transaction.amount, \" \", transaction.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Provider: \", transaction.provider]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"SWIFT Code: \", transaction.swiftCode, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleValidateSwift(transaction._id, transaction.swiftCode),\n              className: \"action-button\",\n              style: {\n                padding: '4px 8px',\n                fontSize: '0.8rem',\n                marginLeft: '10px'\n              },\n              children: \"Validate SWIFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), swiftValidationResults[transaction._id] && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: swiftValidationResults[transaction._id].valid ? 'green' : 'red'\n            },\n            children: swiftValidationResults[transaction._id].message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Recipient: \", transaction.recipientAccountInfo.accountName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Recipient Account: \", transaction.recipientAccountInfo.accountNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Recipient Bank: \", transaction.recipientAccountInfo.bankName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Verification notes...\",\n            value: (selectedTransaction === null || selectedTransaction === void 0 ? void 0 : selectedTransaction.verificationNotes) || '',\n            onChange: e => setSelectedTransaction({\n              ...transaction,\n              verificationNotes: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVerification(transaction._id, 'completed'),\n              className: \"approve-button\",\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVerification(transaction._id, 'rejected'),\n              className: \"reject-button\",\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, transaction._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"e9Fp9mxL0GFWhQJgnzGqxUDk2w0=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminDashboard","user","token","_s","pendingTransactions","setPendingTransactions","selectedTransaction","setSelectedTransaction","swiftValidationResults","setSwiftValidationResults","fetchPendingTransactions","response","fetch","headers","data","json","error","console","interval","setInterval","clearInterval","handleVerification","transactionId","action","method","body","JSON","stringify","verificationNotes","ok","prev","newResults","handleValidateSwift","swiftCode","result","valid","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","customer","first_name","last_name","account_number","amount","currency","provider","onClick","_id","style","padding","fontSize","marginLeft","color","recipientAccountInfo","accountName","accountNumber","bankName","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Desktop/APDS_Banking/client/src/components/dashboard/AdminDashboard.js"],"sourcesContent":["// File: src/components/dashboard/AdminDashboard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst AdminDashboard = ({ user, token }) => {\r\n  const [pendingTransactions, setPendingTransactions] = useState([]);\r\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\r\n  const [swiftValidationResults, setSwiftValidationResults] = useState({});\r\n\r\n  // Fetch all pending transactions from the backend\r\n  const fetchPendingTransactions = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/transaction/admin/pending', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      setPendingTransactions(data);\r\n    } catch (error) {\r\n      console.error('Error fetching pending transactions:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPendingTransactions();\r\n    const interval = setInterval(fetchPendingTransactions, 30000); // Refresh every 30 seconds\r\n    return () => clearInterval(interval);\r\n  }, [token]);\r\n\r\n  // Handle approval/rejection of a transaction\r\n  const handleVerification = async (transactionId, action) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/transaction/admin/verify/${transactionId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          action,\r\n          verificationNotes: selectedTransaction?.verificationNotes || ''\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        fetchPendingTransactions();\r\n        setSelectedTransaction(null);\r\n        // Clear any validation result for this transaction\r\n        setSwiftValidationResults(prev => {\r\n          const newResults = { ...prev };\r\n          delete newResults[transactionId];\r\n          return newResults;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying transaction:', error);\r\n    }\r\n  };\r\n\r\n  // Handle SWIFT code validation by calling the admin endpoint\r\n  const handleValidateSwift = async (transactionId, swiftCode) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/transaction/admin/validate-swift', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ swiftCode })\r\n      });\r\n      const result = await response.json();\r\n      // Save the result (which includes a validity flag and message) for this transaction\r\n      setSwiftValidationResults(prev => ({\r\n        ...prev,\r\n        [transactionId]: result\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error validating SWIFT code:', error);\r\n      setSwiftValidationResults(prev => ({\r\n        ...prev,\r\n        [transactionId]: { valid: false, message: 'Validation failed' }\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h2>Admin Dashboard</h2>\r\n      <div className=\"pending-transactions\">\r\n        <h3>Pending Transactions</h3>\r\n        {pendingTransactions.map(transaction => (\r\n          <div key={transaction._id} className=\"transaction-card\">\r\n            <div className=\"customer-info\">\r\n              <h4>\r\n                Customer: {transaction.customer.first_name} {transaction.customer.last_name}\r\n              </h4>\r\n              <p>Account: {transaction.customer.account_number}</p>\r\n            </div>\r\n            <div className=\"transaction-details\">\r\n              <p>Amount: {transaction.amount} {transaction.currency}</p>\r\n              <p>Provider: {transaction.provider}</p>\r\n              <p>\r\n                SWIFT Code: {transaction.swiftCode}{' '}\r\n                <button\r\n                  onClick={() => handleValidateSwift(transaction._id, transaction.swiftCode)}\r\n                  className=\"action-button\"\r\n                  style={{\r\n                    padding: '4px 8px',\r\n                    fontSize: '0.8rem',\r\n                    marginLeft: '10px'\r\n                  }}\r\n                >\r\n                  Validate SWIFT\r\n                </button>\r\n              </p>\r\n              {swiftValidationResults[transaction._id] && (\r\n                <p style={{ color: swiftValidationResults[transaction._id].valid ? 'green' : 'red' }}>\r\n                  {swiftValidationResults[transaction._id].message}\r\n                </p>\r\n              )}\r\n              <p>Recipient: {transaction.recipientAccountInfo.accountName}</p>\r\n              <p>Recipient Account: {transaction.recipientAccountInfo.accountNumber}</p>\r\n              <p>Recipient Bank: {transaction.recipientAccountInfo.bankName}</p>\r\n            </div>\r\n            <div className=\"verification-actions\">\r\n              <textarea\r\n                placeholder=\"Verification notes...\"\r\n                value={selectedTransaction?.verificationNotes || ''}\r\n                onChange={(e) =>\r\n                  setSelectedTransaction({\r\n                    ...transaction,\r\n                    verificationNotes: e.target.value\r\n                  })\r\n                }\r\n              />\r\n              <div className=\"buttons\">\r\n                <button\r\n                  onClick={() => handleVerification(transaction._id, 'completed')}\r\n                  className=\"approve-button\"\r\n                >\r\n                  Approve\r\n                </button>\r\n                <button\r\n                  onClick={() => handleVerification(transaction._id, 'rejected')}\r\n                  className=\"reject-button\"\r\n                >\r\n                  Reject\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}